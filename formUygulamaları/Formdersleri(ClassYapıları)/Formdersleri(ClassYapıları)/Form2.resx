<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>